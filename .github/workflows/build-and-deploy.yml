name: Java CI

on:
  push:
    branches:
      - main
      - feat/*
  
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c
      - name: Set up JDK 17
        uses: actions/setup-java@1df8dbefe2a8cbc99770194893dd902763bee34b
        with:
          java-version: '11'
          distribution: 'temurin'
      - name: Build with Maven
        run: >
          mvn package -B -DskipTests=true 
          -DmavenVersionOption='Default'
          -DmavenOptions='-Xmx3072m' 
          -DmavenAuthenticateFeed=false
          -DeffectivePomSkip=true 
          -DsonarQubeRunAnalysis=false

      - name: Release
        id: release
        uses: cycjimmy/semantic-release-action@8f6ceb9d5aae5578b1dcda6af00008235204e7fa
        with:
          semantic_version: 18.0.0
          extra_plugins: |
            @semantic-release/release-notes-generator@10.0.3
            @semantic-release/git@10.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to the Container registry
        id: docker_login
        if: steps.release.outputs.new_release_published == 'true'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        id: docker_build_push
        if: steps.release.outputs.new_release_published == 'true'
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:latest
            ghcr.io/${{ github.repository }}:v${{ steps.release.outputs.new_release_version }}
          labels: |
            maintainer=https://pagopa.it
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
  deploy:
    name: "Deploy on ECS"
    if: build.steps.release.outputs.new_release_published == 'true'
    runs-on: ubuntu-latest
    env:
      AWS_REGION: eu-south-1
    steps:
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.IAM_ROLE }}
          aws-region: ${{ env.AWS_REGION }}
      
      - name: Get Account id
        run: |
          aws sts get-caller-identity --query Account --output text
      
      - name: Download task definition
        run: |
          aws ecs describe-task-definition \
          --task-definition pn-d-strapi-task \
          --query taskDefinition > task-definition.json
      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: pn-d-strapi-task
          image: "${{ env.IMAGE }}:latest"
      
      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: pn-d-strapi-srv
          cluster: pn-d-ecs-cluster
          wait-for-service-stability: true