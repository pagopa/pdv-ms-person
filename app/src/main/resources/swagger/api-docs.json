{
  "openapi" : "3.0.3",
  "info" : {
    "title" : "Api Documentation",
    "description" : "Api Documentation",
    "termsOfService" : "urn:tos",
    "contact" : { },
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0"
    },
    "version" : "1.0"
  },
  "servers" : [ {
    "url" : "http://localhost:80",
    "description" : "Inferred Url"
  } ],
  "tags" : [ {
    "name" : "people",
    "description" : "Person Controller"
  }, {
    "name" : "tokens",
    "description" : "Tokenizer Controller"
  } ],
  "paths" : {
    "/people" : {
      "put" : {
        "tags" : [ "people" ],
        "summary" : "${swagger.ms-tokenizer.tokens.api.updateOrCreateUserByExternalId.summary}",
        "description" : "${swagger.ms-tokenizer.tokens.api.updateOrCreateUserByExternalId.notes}",
        "operationId" : "updateOrCreateUserByExternalIdUsingPUT",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserInternalId"
                }
              }
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/people/search" : {
      "post" : {
        "tags" : [ "people" ],
        "summary" : "${swagger.ms-tokenizer.tokens.api.searchUser.summary}",
        "description" : "${swagger.ms-tokenizer.tokens.api.searchUser.notes}",
        "operationId" : "searchUserUsingPOST",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "${swagger.ms-tokenizer.token.model.fields}",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserSearchDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserResource"
                }
              }
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/people/{id}" : {
      "get" : {
        "tags" : [ "people" ],
        "summary" : "${swagger.ms-tokenizer.tokens.api.getUserByInternalId.summary}",
        "description" : "${swagger.ms-tokenizer.tokens.api.getUserByInternalId.notes}",
        "operationId" : "getUserByInternalIdUsingGET",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "${swagger.ms-tokenizer.token.model.id}",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserResource"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      },
      "patch" : {
        "tags" : [ "people" ],
        "summary" : "${swagger.ms-tokenizer.tokens.api.updateUserFieldsByInternalId.summary}",
        "description" : "${swagger.ms-tokenizer.tokens.api.updateUserFieldsByInternalId.notes}",
        "operationId" : "updateUserFieldsByInternalIdUsingPATCH",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "${swagger.ms-tokenizer.token.model.id}",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MutableUserFieldsDto"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          }
        }
      }
    },
    "/tokens" : {
      "put" : {
        "tags" : [ "tokens" ],
        "summary" : "${swagger.ms-tokenizer.tokens.api.save.summary}",
        "description" : "${swagger.ms-tokenizer.tokens.api.save.notes}",
        "operationId" : "saveUsingPUT",
        "parameters" : [ {
          "name" : "namespace",
          "in" : "header",
          "description" : "${swagger.ms-tokenizer.token.model.namespace}",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "GLOBAL", "IO", "PN", "SELFCARE" ]
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateTokenDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TokenResource"
                }
              }
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/tokens/search" : {
      "post" : {
        "tags" : [ "tokens" ],
        "summary" : "${swagger.ms-tokenizer.tokens.api.getUserByInternalId.summary}",
        "description" : "${swagger.ms-tokenizer.tokens.api.getUserByInternalId.notes}",
        "operationId" : "searchTokenUsingPOST",
        "parameters" : [ {
          "name" : "namespace",
          "in" : "header",
          "description" : "${swagger.ms-tokenizer.token.model.namespace}",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "GLOBAL", "IO", "PN", "SELFCARE" ]
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/FilterCriteria"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TokenResource"
                }
              }
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/tokens/{token}/pii" : {
      "get" : {
        "tags" : [ "tokens" ],
        "summary" : "${swagger.ms-tokenizer.tokens.api.getUserByInternalId.summary}",
        "description" : "${swagger.ms-tokenizer.tokens.api.getUserByInternalId.notes}",
        "operationId" : "findPiiUsingGET",
        "parameters" : [ {
          "name" : "token",
          "in" : "path",
          "description" : "${swagger.tokenizer.token.model.token}",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PiiResource"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "CreateTokenDto" : {
        "title" : "CreateTokenDto",
        "required" : [ "pii" ],
        "type" : "object",
        "properties" : {
          "pii" : {
            "type" : "string",
            "description" : "${swagger.tokenizer.token.model.pii}"
          }
        }
      },
      "FilterCriteria" : {
        "title" : "FilterCriteria",
        "required" : [ "pii" ],
        "type" : "object",
        "properties" : {
          "pii" : {
            "type" : "string",
            "description" : "${swagger.tokenizer.token.model.pii}"
          }
        }
      },
      "MutableUserFieldsDto" : {
        "title" : "MutableUserFieldsDto",
        "type" : "object",
        "properties" : {
          "cfields" : {
            "type" : "object"
          },
          "hcFields" : {
            "type" : "object",
            "description" : "Certified source of information"
          }
        }
      },
      "PiiResource" : {
        "title" : "PiiResource",
        "required" : [ "pii" ],
        "type" : "object",
        "properties" : {
          "pii" : {
            "type" : "string",
            "description" : "${swagger.tokenizer.token.model.pii}"
          }
        }
      },
      "TokenResource" : {
        "title" : "TokenResource",
        "required" : [ "token" ],
        "type" : "object",
        "properties" : {
          "rootToken" : {
            "type" : "string",
            "description" : "${swagger.tokenizer.token.model.rootToken}",
            "format" : "uuid"
          },
          "token" : {
            "type" : "string",
            "description" : "${swagger.tokenizer.token.model.token}",
            "format" : "uuid"
          }
        }
      },
      "UserDto" : {
        "title" : "UserDto",
        "required" : [ "certification", "externalId" ],
        "type" : "object",
        "properties" : {
          "certification" : {
            "type" : "string",
            "description" : "Certified source of information",
            "enum" : [ "NONE", "SPID" ]
          },
          "cfields" : {
            "type" : "object"
          },
          "externalId" : {
            "type" : "string",
            "description" : "User external id"
          },
          "hcFields" : {
            "type" : "object",
            "description" : "Certified source of information"
          }
        }
      },
      "UserInternalId" : {
        "title" : "UserInternalId",
        "required" : [ "internalId" ],
        "type" : "object",
        "properties" : {
          "internalId" : {
            "type" : "string",
            "format" : "uuid"
          }
        }
      },
      "UserResource" : {
        "title" : "UserResource",
        "required" : [ "certification", "externalId", "internalId" ],
        "type" : "object",
        "properties" : {
          "certification" : {
            "type" : "string"
          },
          "cfields" : {
            "type" : "object"
          },
          "externalId" : {
            "type" : "string"
          },
          "hcFields" : {
            "type" : "object"
          },
          "internalId" : {
            "type" : "string"
          }
        }
      },
      "UserSearchDto" : {
        "title" : "UserSearchDto",
        "required" : [ "externalId" ],
        "type" : "object",
        "properties" : {
          "externalId" : {
            "type" : "string",
            "description" : "User external id"
          }
        }
      }
    }
  }
}