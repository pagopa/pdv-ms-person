{
  "openapi": "3.0.3",
  "info": {
    "title": "pdv-ms-person",
    "description": "People API documentation",
    "version": "1.0-SNAPSHOT"
  },
  "servers": [
    {
      "url": "http://localhost:80",
      "description": "Inferred Url"
    }
  ],
  "tags": [
    {
      "name": "person",
      "description": "Person operations"
    }
  ],
  "paths": {
    "/people/id": {
      "get": {
        "tags": [
          "person"
        ],
        "summary": "Find person id",
        "description": "Find an existing person id given its namespaced id",
        "operationId": "findIdByNamespacedIdUsingGET",
        "parameters": [
          {
            "name": "namespacedId",
            "in": "query",
            "description": "Person namespaced id",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonId"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/people/{id}": {
      "get": {
        "tags": [
          "person"
        ],
        "summary": "Find person",
        "description": "Retrieve the person by its internal id",
        "operationId": "findByIdUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Person internal id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "isNamespaced",
            "in": "query",
            "description": "Indicates if the Person is namespaced or not",
            "required": true,
            "style": "form",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonResource"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "person"
        ],
        "summary": "Delete person",
        "description": "Delete person by its internal id",
        "operationId": "deletePersonUsingDELETE",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Person internal id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": [
          "person"
        ],
        "summary": "Upsert person details",
        "description": "Update the given subset fields of an existing person by its internal (global) id, if not present create a new one",
        "operationId": "saveUsingPATCH",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Person internal id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SavePersonDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/people/{id}/namespace/{namespace}": {
      "put": {
        "tags": [
          "person"
        ],
        "summary": "Upsert person namespace",
        "description": "Create a new person namespace given its internal (global) id, if already exists do nothing",
        "operationId": "saveNamespacedIdUsingPUT",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Person internal id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "namespace",
            "in": "path",
            "description": "Caller visibility context",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SavePersonNamespaceDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "person"
        ],
        "summary": "Delete person namespace",
        "description": "Delete person namespace by internal (global) id",
        "operationId": "deletePersonNamespaceUsingDELETE",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Person internal id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "namespace",
            "in": "path",
            "description": "Caller visibility context",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "PersonId": {
        "title": "PersonId",
        "type": "object"
      },
      "PersonResource": {
        "title": "PersonResource",
        "type": "object"
      },
      "SavePersonDto": {
        "title": "SavePersonDto",
        "type": "object"
      },
      "SavePersonNamespaceDto": {
        "title": "SavePersonNamespaceDto",
        "type": "object"
      }
    }
  }
}